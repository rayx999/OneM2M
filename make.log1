g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src/Request.cc -o build/src/Request.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src/RequestHandler.cc -o build/src/RequestHandler.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src/Response.cc -o build/src/Response.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src/CSEBase.cc -o build/src/CSEBase.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src-gen/Response.pb.cc -o build/src-gen/Response.pb.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src-gen/CSEBase.pb.cc -o build/src-gen/CSEBase.pb.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src-gen/CommonTypes.pb.cc -o build/src-gen/CommonTypes.pb.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c src-gen/Request.pb.cc -o build/src-gen/Request.pb.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c gtest/gtest/gtest-all.cc -o build/gtest/gtest/gtest-all.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c gtest/utest/gtest_main.cc -o build/gtest/utest/gtest_main.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c gtest/utest/test_CSEBase.cc -o build/gtest/utest/test_CSEBase.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c gtest/utest/test_utils.cc -o build/gtest/utest/test_utils.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c gtest/utest/test_Request.cc -o build/gtest/utest/test_Request.o
g++ -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest  -g -c gtest/utest/test_Response.cc -o build/gtest/utest/test_Response.o
g++ build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o build/gtest/gtest/gtest-all.o build/gtest/utest/gtest_main.o build/gtest/utest/test_CSEBase.o build/gtest/utest/test_utils.o build/gtest/utest/test_Request.o build/gtest/utest/test_Response.o -ljson2pb -ljansson -lprotobuf -lpthread -lboost_iostreams -L/usr/local/lib -o build/utest.exe
rm -rf build/data
cp -rf gtest/data build
cd build && ./utest.exe
# GNU Make 4.1
# Built for i686-pc-cygwin
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# make 数据基础，打印在 Wed Jul 22 14:18:26 2015

# 变量

# 'override' directive
GNUMAKEFLAGS := 
# 自动
<D = $(patsubst %/,%,$(dir $<))
# 自动
?F = $(notdir $?)
# 默认
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 11)
OBJ := build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o
# makefile (from 'Makefile', line 10)
SRC := src/Request.cc src/RequestHandler.cc src/Response.cc src/CSEBase.cc src-gen/Response.pb.cc src-gen/CSEBase.pb.cc src-gen/CommonTypes.pb.cc src-gen/Request.pb.cc
# makefile
MAKEFLAGS = np
# 默认
CWEAVE = cweave
# 自动
?D = $(patsubst %/,%,$(dir $?))
# 环境
!:: = ::\
# makefile (from 'Makefile', line 16)
INCLUDES := -Iinclude -Igtest -Isrc -Isrc-gen -Igtest/gtest -Igtest/utest 
# 自动
@D = $(patsubst %/,%,$(dir $@))
# 环境
HOMEDRIVE = C:
# 自动
@F = $(notdir $@)
# 自动
^D = $(patsubst %/,%,$(dir $^))
# makefile
CURDIR := /mnt/Workspace/Github/OneM2M
# makefile
SHELL = /bin/sh
# 默认
RM = rm -f
# 默认
CO = co
# 环境
ProgramFiles(x86) = C:\Program Files (x86)
# 环境
WINDIR = C:\Windows
# 环境
FP_NO_HOST_CHECK = NO
# 环境
TZ = America/New_York
# 环境
_ = /usr/bin/make
# 默认
PREPROCESS.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -F
# makefile (from 'Makefile', line 12)
UT_SRC := gtest/gtest/gtest-all.cc gtest/utest/gtest_main.cc gtest/utest/test_CSEBase.cc gtest/utest/test_utils.cc gtest/utest/test_Request.cc gtest/utest/test_Response.cc
# 环境
EXECIGNORE = *.dll
# 默认
LINK.m = $(OBJC) $(OBJCFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# 默认
LINK.o = $(CC) $(LDFLAGS) $(TARGET_ARCH)
# 默认
OUTPUT_OPTION = -o $@
# 默认
COMPILE.cpp = $(COMPILE.cc)
# 环境
PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# 环境
USERNAME = weimi_000
# 默认
LINK.p = $(PC) $(PFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# 环境
PBC_PATH = c:\cygwin\usr\local\bin
# makefile (from 'Makefile', line 22)
E_SRC := cse/CSEHandler.cc cse/CSEMain.cc nse/NSEBase.cc
# makefile (from 'Makefile', line 25)
E_INC := -Iinclude -Icse -Inse
# makefile (from 'Makefile', line 1)
CC := g++
# 环境
CommonProgramFiles(x86) = C:\Program Files (x86)\Common Files
# 环境
INFOPATH = /usr/local/info:/usr/share/info:/usr/info
# 环境
VS100COMNTOOLS = C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\Tools\
# 默认
CHECKOUT,v = +$(if $(wildcard $@),,$(CO) $(COFLAGS) $< $@)
# makefile (from 'Makefile', line 18)
UT_LIBS := -lboost_iostreams -L/usr/local/lib
# 默认
LEX.m = $(LEX) $(LFLAGS) -t
# 默认
CPP = $(CC) -E
# 默认
LINK.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# 默认
MAKE_HOST := i686-pc-cygwin
# 环境
PATH = /usr/local/bin:/usr/bin:/usr/bin:/usr/local/bin:/cygdrive/c/Python34:/cygdrive/c/Python34/Scripts:/cygdrive/c/Windows/system32:/cygdrive/c/Windows:/cygdrive/c/Windows/System32/Wbem:/cygdrive/c/Windows/System32/WindowsPowerShell/v1.0
# 环境
VS110COMNTOOLS = C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\Tools\
# makefile (from 'Makefile', line 2)
LD := g++
# 默认
TEXI2DVI = texi2dvi
# 默认
YACC = yacc
# 默认
COMPILE.mod = $(M2C) $(M2FLAGS) $(MODFLAGS) $(TARGET_ARCH)
# 环境
PROCESSOR_ARCHITECTURE = x86
# 默认
LINK.r = $(FC) $(FFLAGS) $(RFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# 环境
USERPROFILE = C:\Users\weimi_000
# 默认
LINT = lint
# 默认
COMPILE.f = $(FC) $(FFLAGS) $(TARGET_ARCH) -c
# 默认
LINT.c = $(LINT) $(LINTFLAGS) $(CPPFLAGS) $(TARGET_ARCH)
# 默认
YACC.m = $(YACC) $(YFLAGS)
# 环境
ALLUSERSPROFILE = C:\ProgramData
# 默认
YACC.y = $(YACC) $(YFLAGS)
# 默认
AR = ar
# 环境
NUMBER_OF_PROCESSORS = 8
# 环境
VS120COMNTOOLS = C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\Tools\
# makefile (from 'Makefile', line 26)
E_LIB := -ljson2pb -ljansson -lprotobuf -lpthread -lboost_system -lws2_32
# 默认
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink guile load
# 默认
TANGLE = tangle
# 环境
ProgramW6432 = C:\Program Files
# 默认
GET = get
# 自动
%F = $(notdir $%)
# 默认
COMPILE.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# 默认
CTANGLE = ctangle
# 默认
.LIBPATTERNS = lib%.dll.a %.dll.a lib%.a %.lib lib%.dll %.dll
# makefile (from 'Makefile', line 15)
G_SRC := src-gen/CSEBase.cc src-gen/CommonTypes.cc src-gen/Request.cc src-gen/Response.cc
# 环境
ORIGINAL_PATH = /usr/bin:/usr/local/bin:/cygdrive/c/Python34:/cygdrive/c/Python34/Scripts:/cygdrive/c/Windows/system32:/cygdrive/c/Windows:/cygdrive/c/Windows/System32/Wbem:/cygdrive/c/Windows/System32/WindowsPowerShell/v1.0
# 环境
COMPUTERNAME = RAYXU
# 默认
LINK.C = $(LINK.cc)
# 环境
PWD = /mnt/Workspace/Github/OneM2M
# 环境
PROGRAMFILES = C:\Program Files (x86)
# 默认
LINK.S = $(CC) $(ASFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_MACH)
# 默认
PREPROCESS.r = $(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -F
# 默认
LINK.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (from 'Makefile', line 21)
E_DIR := cse nse
# 环境
PUBLIC = C:\Users\Public
# 默认
LINK.s = $(CC) $(ASFLAGS) $(LDFLAGS) $(TARGET_MACH)
# 环境
HOME = /home/weimi_000
# 环境
LD_LIBRARY_PATH = /user/local/lib
# 环境
CommonProgramW6432 = C:\Program Files\Common Files
# 环境
ProgramData = C:\ProgramData
# 环境
PRINTER = Adobe PDF
# makefile (from 'Makefile', line 24)
E_FLG := -D_WIN32_WINNT=0x0501 -D__USE_W32_SOCKETS -std=c++11 
# 环境
COMMONPROGRAMFILES = C:\Program Files (x86)\Common Files
# 环境
LOGONSERVER = \\MicrosoftAccount
# makefile (from 'Makefile', line 23)
E_OBJ := build/cse/CSEHandler.o build/cse/CSEMain.o build/nse/NSEBase.o
# 环境
USERDOMAIN = RAYXU
# 环境
HOSTNAME = RAYXU
# 环境
MAKELEVEL := 0
# 默认
COMPILE.m = $(OBJC) $(OBJCFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# 默认
MAKE = $(MAKE_COMMAND)
# 环境
PROTOBUF_PATH = /cygdrive/c/Workspace/Github/protobuf-cygw/src/google/protobuf/
# 环境
SHLVL = 1
# 默认
AS = as
# 默认
PREPROCESS.S = $(CC) -E $(CPPFLAGS)
# makefile (from 'Makefile', line 8)
BUILD_DIR := build
# 默认
COMPILE.p = $(PC) $(PFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# 默认
MAKE_VERSION := 4.1
# 环境
USER = weimi_000
# 默认
FC = f77
# makefile
.DEFAULT_GOAL := all
# 自动
%D = $(patsubst %/,%,$(dir $%))
# 环境
LOCALAPPDATA = C:\Users\weimi_000\AppData\Local
# 默认
ARFLAGS = rv
# 默认
WEAVE = weave
# 默认
MAKE_COMMAND := make
# 环境
PROFILEREAD = true
# 默认
LINK.cpp = $(LINK.cc)
# 环境
PROCESSOR_ARCHITEW6432 = AMD64
# 默认
F77 = $(FC)
# 环境
OLDPWD = /mnt/Workspace
# 默认
.VARIABLES := 
# 默认
PC = pc
# 自动
*F = $(notdir $*)
# 环境
PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9, GenuineIntel
# 环境
OS = Windows_NT
# 默认
COMPILE.def = $(M2C) $(M2FLAGS) $(DEFFLAGS) $(TARGET_ARCH)
# makefile (from 'Makefile', line 5)
G_DIR := src-gen
# makefile (from 'Makefile', line 13)
UT_OBJ := build/gtest/gtest/gtest-all.o build/gtest/utest/gtest_main.o build/gtest/utest/test_CSEBase.o build/gtest/utest/test_utils.o build/gtest/utest/test_Request.o build/gtest/utest/test_Response.o
# 默认
LEX = lex
# 环境
HOMEPATH = \Users\weimi_000
# 环境
MFLAGS = -np
# 自动
*D = $(patsubst %/,%,$(dir $*))
# 环境
CYGWIN-HOME = c:\cygwin
# 默认
LEX.l = $(LEX) $(LFLAGS) -t
# 环境
PSModulePath = C:\Windows\system32\WindowsPowerShell\v1.0\Modules\
# 环境
SYSTEMROOT = C:\Windows
# 自动
+D = $(patsubst %/,%,$(dir $+))
# 默认
COMPILE.r = $(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -c
# 自动
+F = $(notdir $+)
# 默认
M2C = m2c
# 环境
APPDATA = C:\Users\weimi_000\AppData\Roaming
# makefile (from 'Makefile', line 14)
R_SRC := resource/CSEBase.proto resource/CommonTypes.proto resource/Request.proto resource/Response.proto
# 环境
TEMP = /tmp
# 环境
COMSPEC = C:\Windows\system32\cmd.exe
# 默认
MAKEFILES := 
# 默认
COMPILE.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# makefile (from 'Makefile', line 6)
SRC_DIR := src src-gen
# 自动
<F = $(notdir $<)
# 环境
PS1 = \[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$ 
# 默认
CXX = g++
# 默认
COFLAGS = 
# makefile (from 'Makefile', line 4)
R_DIR := resource
# 默认
COMPILE.C = $(COMPILE.cc)
# makefile (from 'Makefile', line 17)
LIBS := -ljson2pb -ljansson -lprotobuf -lpthread
# 自动
^F = $(notdir $^)
# 默认
COMPILE.S = $(CC) $(ASFLAGS) $(CPPFLAGS) $(TARGET_MACH) -c
# 默认
LINK.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# 默认
SUFFIXES := .out .a .ln .o .c .cc .C .cpp .p .f .F .m .r .y .l .ym .yl .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .txinfo .w .ch .web .sh .elc .el
# 环境
SYSTEMDRIVE = C:
# 默认
COMPILE.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# 环境
SESSIONNAME = Console
# 环境
PROCESSOR_REVISION = 3a09
# 默认
COMPILE.s = $(AS) $(ASFLAGS) $(TARGET_MACH)
# 默认
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# 环境
TMP = /tmp
# 默认
.RECIPEPREFIX := 
# 默认
MAKEINFO = makeinfo
# 默认
MAKE_TERMERR := /dev/pty0
# 默认
OBJC = cc
# 默认
TEX = tex
# 环境
LANG = zh_CN.UTF-8
# 环境
PROCESSOR_LEVEL = 6
# 环境
TERM = xterm
# 默认
F77FLAGS = $(FFLAGS)
# 默认
LINK.f = $(FC) $(FFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (from 'Makefile', line 7)
UT_DIR := gtest/gtest gtest/utest
# 环境
VBOX_INSTALL_PATH = C:\Program Files\Oracle\VirtualBox\
# 环境
USERDOMAIN_ROAMINGPROFILE = RAYXU
# 变量的杂凑表状态:
# 负载=179/1024=17%, 重新杂凑=0, 碰撞=62/332=19%

# Pattern-specific 变量值

# 没有 pattern-specific 变量的值。

# 目录

# gtest/utest/RCS：无法对其进行 stat 操作。
# src/RCS：无法对其进行 stat 操作。
# SCCS：无法对其进行 stat 操作。
# src-gen (设备 396265，i-节点 270956)：10 文件， 无 不可能.
# . (设备 396265，i-节点 124847)：34 文件， 19 不可能.
# nse (设备 396265，i-节点 443615)：3 文件， 无 不可能.
# src-gen/SCCS：无法对其进行 stat 操作。
# resource (设备 396265，i-节点 270809)：6 文件， 4 不可能.
# src-gen/RCS：无法对其进行 stat 操作。
# gtest/gtest (设备 396265，i-节点 270744)：4 文件， 无 不可能.
# resource/SCCS：无法对其进行 stat 操作。
# gtest/gtest/SCCS：无法对其进行 stat 操作。
# src (设备 396265，i-节点 270815)：6 文件， 无 不可能.
# resource/RCS：无法对其进行 stat 操作。
# gtest/utest (设备 396265，i-节点 270769)：8 文件， 无 不可能.
# gtest/gtest/RCS：无法对其进行 stat 操作。
# cse (设备 396265，i-节点 270975)：7 文件， 无 不可能.
# gtest/utest/SCCS：无法对其进行 stat 操作。
# src/SCCS：无法对其进行 stat 操作。
# RCS：无法对其进行 stat 操作。

# 78 文件， 23 不可能在 20 目录中。

# 隐含规则。

src-gen/%.cc: resource/%.proto
#  recipe to execute (from 'Makefile', line 55):
	protoc --proto_path=$(R_DIR) --proto_path=$(PROTOBUF_PATH) --cpp_out=$(G_DIR) $?
		

build/%.o: %.cc
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

%.out:

%.a:

%.ln:

%.o:

%: %.o
#  recipe to execute (内置)：
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.c:

%: %.c
#  recipe to execute (内置)：
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.ln: %.c
#  recipe to execute (内置)：
	$(LINT.c) -C$* $<

%.o: %.c
#  recipe to execute (内置)：
	$(COMPILE.c) $(OUTPUT_OPTION) $<

%.cc:

%: %.cc
#  recipe to execute (内置)：
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.cc
#  recipe to execute (内置)：
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

%.C:

%: %.C
#  recipe to execute (内置)：
	$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.C
#  recipe to execute (内置)：
	$(COMPILE.C) $(OUTPUT_OPTION) $<

%.cpp:

%: %.cpp
#  recipe to execute (内置)：
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.cpp
#  recipe to execute (内置)：
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

%.p:

%: %.p
#  recipe to execute (内置)：
	$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.p
#  recipe to execute (内置)：
	$(COMPILE.p) $(OUTPUT_OPTION) $<

%.f:

%: %.f
#  recipe to execute (内置)：
	$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.f
#  recipe to execute (内置)：
	$(COMPILE.f) $(OUTPUT_OPTION) $<

%.F:

%: %.F
#  recipe to execute (内置)：
	$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.F
#  recipe to execute (内置)：
	$(COMPILE.F) $(OUTPUT_OPTION) $<

%.f: %.F
#  recipe to execute (内置)：
	$(PREPROCESS.F) $(OUTPUT_OPTION) $<

%.m:

%: %.m
#  recipe to execute (内置)：
	$(LINK.m) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.m
#  recipe to execute (内置)：
	$(COMPILE.m) $(OUTPUT_OPTION) $<

%.r:

%: %.r
#  recipe to execute (内置)：
	$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.r
#  recipe to execute (内置)：
	$(COMPILE.r) $(OUTPUT_OPTION) $<

%.f: %.r
#  recipe to execute (内置)：
	$(PREPROCESS.r) $(OUTPUT_OPTION) $<

%.y:

%.ln: %.y
#  recipe to execute (内置)：
	$(YACC.y) $< 
	 $(LINT.c) -C$* y.tab.c 
	 $(RM) y.tab.c

%.c: %.y
#  recipe to execute (内置)：
	$(YACC.y) $< 
	 mv -f y.tab.c $@

%.l:

%.ln: %.l
#  recipe to execute (内置)：
	@$(RM) $*.c
	 $(LEX.l) $< > $*.c
	$(LINT.c) -i $*.c -o $@
	 $(RM) $*.c

%.c: %.l
#  recipe to execute (内置)：
	@$(RM) $@ 
	 $(LEX.l) $< > $@

%.r: %.l
#  recipe to execute (内置)：
	$(LEX.l) $< > $@ 
	 mv -f lex.yy.r $@

%.ym:

%.m: %.ym
#  recipe to execute (内置)：
	$(YACC.m) $< 
	 mv -f y.tab.c $@

%.yl:

%.s:

%: %.s
#  recipe to execute (内置)：
	$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.s
#  recipe to execute (内置)：
	$(COMPILE.s) -o $@ $<

%.S:

%: %.S
#  recipe to execute (内置)：
	$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.S
#  recipe to execute (内置)：
	$(COMPILE.S) -o $@ $<

%.s: %.S
#  recipe to execute (内置)：
	$(PREPROCESS.S) $< > $@

%.mod:

%: %.mod
#  recipe to execute (内置)：
	$(COMPILE.mod) -o $@ -e $@ $^

%.o: %.mod
#  recipe to execute (内置)：
	$(COMPILE.mod) -o $@ $<

%.sym:

%.def:

%.sym: %.def
#  recipe to execute (内置)：
	$(COMPILE.def) -o $@ $<

%.h:

%.info:

%.dvi:

%.tex:

%.dvi: %.tex
#  recipe to execute (内置)：
	$(TEX) $<

%.texinfo:

%.info: %.texinfo
#  recipe to execute (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.texinfo
#  recipe to execute (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.texi:

%.info: %.texi
#  recipe to execute (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.texi
#  recipe to execute (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.txinfo:

%.info: %.txinfo
#  recipe to execute (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.txinfo
#  recipe to execute (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.w:

%.c: %.w
#  recipe to execute (内置)：
	$(CTANGLE) $< - $@

%.tex: %.w
#  recipe to execute (内置)：
	$(CWEAVE) $< - $@

%.ch:

%.web:

%.p: %.web
#  recipe to execute (内置)：
	$(TANGLE) $<

%.tex: %.web
#  recipe to execute (内置)：
	$(WEAVE) $<

%.sh:

%: %.sh
#  recipe to execute (内置)：
	cat $< >$@ 
	 chmod a+x $@

%.elc:

%.el:

(%): %
#  recipe to execute (内置)：
	$(AR) $(ARFLAGS) $@ $<

%.out: %
#  recipe to execute (内置)：
	@rm -f $@ 
	 cp $< $@

%.c: %.w %.ch
#  recipe to execute (内置)：
	$(CTANGLE) $^ $@

%.tex: %.w %.ch
#  recipe to execute (内置)：
	$(CWEAVE) $^ $@

%:: %,v
#  recipe to execute (内置)：
	$(CHECKOUT,v)

%:: RCS/%,v
#  recipe to execute (内置)：
	$(CHECKOUT,v)

%:: RCS/%
#  recipe to execute (内置)：
	$(CHECKOUT,v)

%:: s.%
#  recipe to execute (内置)：
	$(GET) $(GFLAGS) $(SCCS_OUTPUT_OPTION) $<

%:: SCCS/s.%
#  recipe to execute (内置)：
	$(GET) $(GFLAGS) $(SCCS_OUTPUT_OPTION) $<

# 94 条隐含规则，5 (5.3%) 终端。

# 文件

# 不是一个目标：
.web.p:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(TANGLE) $<

# 不是一个目标：
.l.r:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LEX.l) $< > $@ 
	 mv -f lex.yy.r $@

build/src:
#  对隐含规则的搜索尚未完成。
#  最近更新 2015-07-22 13:19:26.3001905
#  文件已经被更新。
#  更新成功。
#  recipe to execute (from 'Makefile', line 50):
	@mkdir -p $@

# 不是一个目标：
.dvi:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build/cse:
#  对隐含规则的搜索尚未完成。
#  最近更新 2015-07-22 13:19:26.6194019
#  文件已经被更新。
#  更新成功。
#  recipe to execute (from 'Makefile', line 50):
	@mkdir -p $@

# 不是一个目标：
.ym:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.f.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.f) $(OUTPUT_OPTION) $<

# 不是一个目标：
.l:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.m:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.m) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.ln:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
gtest/utest/test_CSEBase.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-16 14:06:02.5871475
#  文件已经被更新。
#  更新成功。

build/gtest/utest/test_CSEBase.o: gtest/utest/test_CSEBase.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'gtest/utest/test_CSEBase'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/gtest/utest/test_CSEBase.o
# 自动
# % := 
# 自动
# * := gtest/utest/test_CSEBase
# 自动
# + := gtest/utest/test_CSEBase.cc
# 自动
# | := 
# 自动
# < := gtest/utest/test_CSEBase.cc
# 自动
# ^ := gtest/utest/test_CSEBase.cc
# 自动
# ? := gtest/utest/test_CSEBase.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.y:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.def.sym:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.def) -o $@ $<

# 不是一个目标：
src-gen/Request.cc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

.PHONY: all checkdirs clean utest-run protoc CSEtest
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

protoc: src-gen/CSEBase.cc src-gen/CommonTypes.cc src-gen/Request.cc src-gen/Response.cc
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。

# 不是一个目标：
gtest/utest/test_utils.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-15 23:23:23.4836394
#  文件已经被更新。
#  更新成功。

build/gtest/utest/test_utils.o: gtest/utest/test_utils.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'gtest/utest/test_utils'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/gtest/utest/test_utils.o
# 自动
# % := 
# 自动
# * := gtest/utest/test_utils
# 自动
# + := gtest/utest/test_utils.cc
# 自动
# | := 
# 自动
# < := gtest/utest/test_utils.cc
# 自动
# ^ := gtest/utest/test_utils.cc
# 自动
# ? := gtest/utest/test_utils.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.p.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.p) $(OUTPUT_OPTION) $<

# 不是一个目标：
.p:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.txinfo.dvi:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

build/src/Response.o: src/Response.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src/Response'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src/Response.o
# 自动
# % := 
# 自动
# * := src/Response
# 自动
# + := src/Response.cc
# 自动
# | := 
# 自动
# < := src/Response.cc
# 自动
# ^ := src/Response.cc
# 自动
# ? := src/Response.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.a:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build/gtest/utest/test_Request.o: gtest/utest/test_Request.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'gtest/utest/test_Request'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/gtest/utest/test_Request.o
# 自动
# % := 
# 自动
# * := gtest/utest/test_Request
# 自动
# + := gtest/utest/test_Request.cc
# 自动
# | := 
# 自动
# < := gtest/utest/test_Request.cc
# 自动
# ^ := gtest/utest/test_Request.cc
# 自动
# ? := gtest/utest/test_Request.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.yl:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.l.ln:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	@$(RM) $*.c
	 $(LEX.l) $< > $*.c
	$(LINT.c) -i $*.c -o $@
	 $(RM) $*.c

# 不是一个目标：
.F.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.F) $(OUTPUT_OPTION) $<

# 不是一个目标：
.texi.info:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# 不是一个目标：
.w.c:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(CTANGLE) $< - $@

# 不是一个目标：
.texi.dvi:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# 不是一个目标：
.ch:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.m.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.m) $(OUTPUT_OPTION) $<

# 不是一个目标：
build/cse/CSEMain.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.cc:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.cc.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

# 不是一个目标：
.def:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.SUFFIXES: .out .a .ln .o .c .cc .C .cpp .p .f .F .m .r .y .l .ym .yl .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .txinfo .w .ch .web .sh .elc .el
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.c.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.c) $(OUTPUT_OPTION) $<

# 不是一个目标：
Makefile:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-22 14:18:15.1793723
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
src/Request.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 12:57:50.9165156
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
.r.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.r) $(OUTPUT_OPTION) $<

# 不是一个目标：
.r:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@

build/utest.exe: build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o build/gtest/gtest/gtest-all.o build/gtest/utest/gtest_main.o build/gtest/utest/test_CSEBase.o build/gtest/utest/test_utils.o build/gtest/utest/test_Request.o build/gtest/utest/test_Response.o
#  对隐含规则的搜索尚未完成。
#  Implicit/static pattern stem: ''
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/utest.exe
# 自动
# % := 
# 自动
# * := 
# 自动
# + := build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o build/gtest/gtest/gtest-all.o build/gtest/utest/gtest_main.o build/gtest/utest/test_CSEBase.o build/gtest/utest/test_utils.o build/gtest/utest/test_Request.o build/gtest/utest/test_Response.o
# 自动
# | := 
# 自动
# < := build/src/Request.o
# 自动
# ^ := build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o build/gtest/gtest/gtest-all.o build/gtest/utest/gtest_main.o build/gtest/utest/test_CSEBase.o build/gtest/utest/test_utils.o build/gtest/utest/test_Request.o build/gtest/utest/test_Response.o
# 自动
# ? := build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o build/gtest/gtest/gtest-all.o build/gtest/utest/gtest_main.o build/gtest/utest/test_CSEBase.o build/gtest/utest/test_utils.o build/gtest/utest/test_Request.o build/gtest/utest/test_Response.o
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/86=1%
#  recipe to execute (from 'Makefile', line 38):
	$(LD) $^ $(LIBS) $(UT_LIBS) -o $@

build/src/CSEBase.o: src/CSEBase.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src/CSEBase'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src/CSEBase.o
# 自动
# % := 
# 自动
# * := src/CSEBase
# 自动
# + := src/CSEBase.cc
# 自动
# | := 
# 自动
# < := src/CSEBase.cc
# 自动
# ^ := src/CSEBase.cc
# 自动
# ? := src/CSEBase.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.ym.m:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(YACC.m) $< 
	 mv -f y.tab.c $@

# 不是一个目标：
.y.ln:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(YACC.y) $< 
	 $(LINT.c) -C$* y.tab.c 
	 $(RM) y.tab.c

build/src-gen/Request.pb.o: src-gen/Request.pb.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src-gen/Request.pb'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src-gen/Request.pb.o
# 自动
# % := 
# 自动
# * := src-gen/Request.pb
# 自动
# + := src-gen/Request.pb.cc
# 自动
# | := 
# 自动
# < := src-gen/Request.pb.cc
# 自动
# ^ := src-gen/Request.pb.cc
# 自动
# ? := src-gen/Request.pb.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.elc:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.l.c:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	@$(RM) $@ 
	 $(LEX.l) $< > $@

# 不是一个目标：
src-gen/CommonTypes.pb.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 12:23:24.4066898
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
gtest/utest/test_Request.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 13:37:53.4901034
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
.out:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build/src/RequestHandler.o: src/RequestHandler.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src/RequestHandler'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src/RequestHandler.o
# 自动
# % := 
# 自动
# * := src/RequestHandler
# 自动
# + := src/RequestHandler.cc
# 自动
# | := 
# 自动
# < := src/RequestHandler.cc
# 自动
# ^ := src/RequestHandler.cc
# 自动
# ? := src/RequestHandler.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

all: checkdirs build/utest.exe utest-run
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件已经被更新。
#  更新成功。
# 变量的杂凑表状态:
# 负载=0/32=0%, 重新杂凑=0, 碰撞=0/91=0%

# 不是一个目标：
.C:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.r.f:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(PREPROCESS.r) $(OUTPUT_OPTION) $<

# 不是一个目标：
.S:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.texinfo.info:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# 不是一个目标：
.c:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.w.tex:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(CWEAVE) $< - $@

# 不是一个目标：
.c.ln:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINT.c) -C$* $<

# 不是一个目标：
.s.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.s) -o $@ $<

# 不是一个目标：
.s:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@

build/src-gen/Response.pb.o: src-gen/Response.pb.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src-gen/Response.pb'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src-gen/Response.pb.o
# 自动
# % := 
# 自动
# * := src-gen/Response.pb
# 自动
# + := src-gen/Response.pb.cc
# 自动
# | := 
# 自动
# < := src-gen/Response.pb.cc
# 自动
# ^ := src-gen/Response.pb.cc
# 自动
# ? := src-gen/Response.pb.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
src-gen/Response.cc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

CSEtest: build/CSEMain.exe
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。

# 不是一个目标：
gtest/utest/gtest_main.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-10 14:29:34
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
gtest/gtest/gtest-all.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-15 19:00:42.2010443
#  文件已经被更新。
#  更新成功。

build/gtest/gtest/gtest-all.o: gtest/gtest/gtest-all.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'gtest/gtest/gtest-all'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/gtest/gtest/gtest-all.o
# 自动
# % := 
# 自动
# * := gtest/gtest/gtest-all
# 自动
# + := gtest/gtest/gtest-all.cc
# 自动
# | := 
# 自动
# < := gtest/gtest/gtest-all.cc
# 自动
# ^ := gtest/gtest/gtest-all.cc
# 自动
# ? := gtest/gtest/gtest-all.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.texinfo.dvi:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# 不是一个目标：
.el:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.lm.m:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	@$(RM) $@ 
	 $(LEX.m) $< > $@

# 不是一个目标：
.y.c:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(YACC.y) $< 
	 mv -f y.tab.c $@

build/gtest/utest:
#  对隐含规则的搜索尚未完成。
#  最近更新 2015-07-22 13:19:26.5453517
#  文件已经被更新。
#  更新成功。
#  recipe to execute (from 'Makefile', line 50):
	@mkdir -p $@

# 不是一个目标：
.web.tex:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(WEAVE) $<

# 不是一个目标：
.texinfo:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.DEFAULT:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.h:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
src-gen/Request.pb.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 12:23:24.551788
#  文件已经被更新。
#  更新成功。

build/src-gen/CSEBase.pb.o: src-gen/CSEBase.pb.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src-gen/CSEBase.pb'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src-gen/CSEBase.pb.o
# 自动
# % := 
# 自动
# * := src-gen/CSEBase.pb
# 自动
# + := src-gen/CSEBase.pb.cc
# 自动
# | := 
# 自动
# < := src-gen/CSEBase.pb.cc
# 自动
# ^ := src-gen/CSEBase.pb.cc
# 自动
# ? := src-gen/CSEBase.pb.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
src-gen/CSEBase.cc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.tex.dvi:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(TEX) $<

# 不是一个目标：
src/Response.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 12:45:03.8440482
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
.cpp.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

# 不是一个目标：
.cpp:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

clean:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  recipe to execute (from 'Makefile', line 58):
	@rm -rf $(BUILD_DIR) 
	#@rm $(G_DIR)/*

# 不是一个目标：
.C.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.C) $(OUTPUT_OPTION) $<

# 不是一个目标：
.texi:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.txinfo:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.tex:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
build/cse/CSEHandler.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.txinfo.info:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

build/gtest/gtest:
#  对隐含规则的搜索尚未完成。
#  最近更新 2015-07-22 13:19:26.4723039
#  文件已经被更新。
#  更新成功。
#  recipe to execute (from 'Makefile', line 50):
	@mkdir -p $@

# 不是一个目标：
build/nse/NSEBase.o:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build/src/Request.o: src/Request.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src/Request'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src/Request.o
# 自动
# % := 
# 自动
# * := src/Request
# 自动
# + := src/Request.cc
# 自动
# | := 
# 自动
# < := src/Request.cc
# 自动
# ^ := src/Request.cc
# 自动
# ? := src/Request.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.sh:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	cat $< >$@ 
	 chmod a+x $@

# 不是一个目标：
gtest/utest/test_Response.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 14:36:04.4191275
#  文件已经被更新。
#  更新成功。

build/gtest/utest/test_Response.o: gtest/utest/test_Response.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'gtest/utest/test_Response'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/gtest/utest/test_Response.o
# 自动
# % := 
# 自动
# * := gtest/utest/test_Response
# 自动
# + := gtest/utest/test_Response.cc
# 自动
# | := 
# 自动
# < := gtest/utest/test_Response.cc
# 自动
# ^ := gtest/utest/test_Response.cc
# 自动
# ? := gtest/utest/test_Response.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

build/nse:
#  对隐含规则的搜索尚未完成。
#  最近更新 2015-07-22 13:19:26.7404809
#  文件已经被更新。
#  更新成功。
#  recipe to execute (from 'Makefile', line 50):
	@mkdir -p $@

# 不是一个目标：
src/CSEBase.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-17 13:35:17.0155683
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
.S.s:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(PREPROCESS.S) $< > $@

# 不是一个目标：
.mod:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.mod) -o $@ -e $@ $^

build/src-gen/CommonTypes.pb.o: src-gen/CommonTypes.pb.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'src-gen/CommonTypes.pb'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/src-gen/CommonTypes.pb.o
# 自动
# % := 
# 自动
# * := src-gen/CommonTypes.pb
# 自动
# + := src-gen/CommonTypes.pb.cc
# 自动
# | := 
# 自动
# < := src-gen/CommonTypes.pb.cc
# 自动
# ^ := src-gen/CommonTypes.pb.cc
# 自动
# ? := src-gen/CommonTypes.pb.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.mod.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.mod) -o $@ $<

# 不是一个目标：
.F.f:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(PREPROCESS.F) $(OUTPUT_OPTION) $<

# 不是一个目标：
src-gen/CSEBase.pb.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 12:23:24.28461
#  文件已经被更新。
#  更新成功。

# 不是一个目标：
.w:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.S.o:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(COMPILE.S) -o $@ $<

checkdirs: build/src build/src-gen build/gtest/gtest build/gtest/utest build/cse build/nse
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件已经被更新。
#  更新成功。

utest-run:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  Implicit/static pattern stem: ''
#  文件不存在。
#  文件已经被更新。
#  更新成功。
# 自动
# @ := utest-run
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/23=4%
#  recipe to execute (from 'Makefile', line 43):
	@rm -rf $(BUILD_DIR)/data
	@cp -rf gtest/data $(BUILD_DIR)
	@cd $(BUILD_DIR) && ./utest.exe
			

# 不是一个目标：
src-gen/CommonTypes.cc:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build/src-gen:
#  对隐含规则的搜索尚未完成。
#  最近更新 2015-07-22 13:19:26.3912503
#  文件已经被更新。
#  更新成功。
#  recipe to execute (from 'Makefile', line 50):
	@mkdir -p $@

# 不是一个目标：
src/RequestHandler.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-22 10:53:34.2699492
#  文件已经被更新。
#  更新成功。

build/CSEMain.exe: build/cse/CSEHandler.o build/cse/CSEMain.o build/nse/NSEBase.o build/src/Request.o build/src/RequestHandler.o build/src/Response.o build/src/CSEBase.o build/src-gen/Response.pb.o build/src-gen/CSEBase.pb.o build/src-gen/CommonTypes.pb.o build/src-gen/Request.pb.o
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (from 'Makefile', line 35):
	$(LD) $^ $(E_LIB) -o $@

# 不是一个目标：
.F:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.web:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.sym:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

build/gtest/utest/gtest_main.o: gtest/utest/gtest_main.cc
#  对隐含规则的搜索已完成。
#  Implicit/static pattern stem: 'gtest/utest/gtest_main'
#  最近更新 1969-12-31 18:59:59.107374182
#  文件已经被更新。
#  更新成功。
# 自动
# @ := build/gtest/utest/gtest_main.o
# 自动
# % := 
# 自动
# * := gtest/utest/gtest_main
# 自动
# + := gtest/utest/gtest_main.cc
# 自动
# | := 
# 自动
# < := gtest/utest/gtest_main.cc
# 自动
# ^ := gtest/utest/gtest_main.cc
# 自动
# ? := gtest/utest/gtest_main.cc
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/15=7%
#  recipe to execute (from 'Makefile', line 63):
	$(CC) $(INCLUDES) -g -c $< -o $@

# 不是一个目标：
.f:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  recipe to execute (内置)：
	$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@

# 不是一个目标：
.info:
#  Builtin rule
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
src-gen/Response.pb.cc:
#  对隐含规则的搜索已完成。
#  最近更新 2015-07-19 12:23:24.6408457
#  文件已经被更新。
#  更新成功。

# 文件杂凑表状态:
# 负载=123/1024=12%, 重新杂凑=0, 碰撞=516/1728=30%
# VPATH 搜索路径

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 477 / storage = 7367 B / avg = 15 B
# current buf: size = 8174 B / used = 7367 B / count = 477 / avg = 15 B

# strcache performance: lookups = 745 / hit rate = 35%
# hash-table stats:
# 负载=477/8192=6%, 重新杂凑=0, 碰撞=193/745=26%
# 在 Wed Jul 22 14:18:26 2015
 上完成 make 数据基础
